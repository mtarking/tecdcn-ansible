annotations:
  - border_color: '#808080FF'
    border_style: ''
    color: '#FFFFFFFF'
    line_end: null
    line_start: null
    thickness: 1
    type: line
    x1: -120.0
    y1: 80.0
    x2: -120.0
    y2: 80.0
    z_index: 0
smart_annotations: []
nodes:
  - boot_disk_size: null
    configuration:
      - name: nxos_config.txt
        content: |-
          hostname inserthostname-here
          # workaround for booting to loader> prompt
          echo 'from cli import cli' > set_boot.py
          echo 'import json' >> set_boot.py
          echo 'import os' >> set_boot.py
          echo 'import time' >> set_boot.py
          echo 'bootimage = json.loads(cli("show version | json"))["kick_file_name"]' >> set_boot.py
          echo 'set_boot = cli("conf t ; boot nxos {} ; no event manager applet BOOTCONFIG".format(bootimage))' >> set_boot.py
          echo 'i = 0' >> set_boot.py
          echo 'while i < 10:' >> set_boot.py
          echo '    try:' >> set_boot.py
          echo '        save_config = cli("copy running-config startup-config")' >> set_boot.py
          echo '        break' >> set_boot.py
          echo '    except Exception:' >> set_boot.py
          echo '        i += 1' >> set_boot.py
          echo '        time.sleep(1)' >> set_boot.py
          echo 'os.remove("/bootflash/set_boot.py")' >> set_boot.py
          event manager applet BOOTCONFIG
           event syslog pattern "Configured from vty"
           action 1.0 cli python bootflash:set_boot.py
          # minimum needed config to login
          no password strength-check
          username admin role network-admin
          username admin password cisco.123 role network-admin
          username cisco role network-admin
          username cisco password cisco role network-admin
          vrf context management
            ip route 0.0.0.0/0 10.15.34.1
          interface mgmt0
            no cdp enable
            vrf member management
            ip address 10.15.34.11/24
    cpu_limit: null
    cpus: null
    data_volume: null
    hide_links: false
    id: n0
    image_definition: nxosv9500v64-lite-10-5-2-f
    label: S1
    node_definition: nxosv9000
    parameters: {}
    ram: null
    tags: []
    x: -120
    y: -280
    interfaces:
      - id: i0
        label: Loopback0
        mac_address: null
        type: loopback
      - id: i1
        label: mgmt0
        mac_address: null
        slot: 0
        type: physical
      - id: i2
        label: Ethernet1/1
        mac_address: null
        slot: 1
        type: physical
      - id: i3
        label: Ethernet1/2
        mac_address: null
        slot: 2
        type: physical
      - id: i4
        label: Ethernet1/3
        mac_address: null
        slot: 3
        type: physical
      - id: i5
        label: Ethernet1/4
        mac_address: null
        slot: 4
        type: physical
      - id: i6
        label: Ethernet1/5
        mac_address: null
        slot: 5
        type: physical
      - id: i7
        label: Ethernet1/6
        mac_address: null
        slot: 6
        type: physical
      - id: i8
        label: Ethernet1/7
        mac_address: null
        slot: 7
        type: physical
      - id: i9
        label: Ethernet1/8
        mac_address: null
        slot: 8
        type: physical
      - id: i10
        label: Ethernet1/9
        mac_address: null
        slot: 9
        type: physical
      - id: i11
        label: Ethernet1/10
        mac_address: null
        slot: 10
        type: physical
  - boot_disk_size: null
    configuration: []
    cpu_limit: null
    cpus: null
    data_volume: null
    hide_links: true
    id: n1
    image_definition: null
    label: unmanaged-switch-0
    node_definition: unmanaged_switch
    parameters: {}
    ram: null
    tags: []
    x: 280
    y: -400
    interfaces:
      - id: i0
        label: port0
        mac_address: null
        slot: 0
        type: physical
      - id: i1
        label: port1
        mac_address: null
        slot: 1
        type: physical
      - id: i2
        label: port2
        mac_address: null
        slot: 2
        type: physical
      - id: i3
        label: port3
        mac_address: null
        slot: 3
        type: physical
      - id: i4
        label: port4
        mac_address: null
        slot: 4
        type: physical
      - id: i5
        label: port5
        mac_address: null
        slot: 5
        type: physical
      - id: i6
        label: port6
        mac_address: null
        slot: 6
        type: physical
      - id: i7
        label: port7
        mac_address: null
        slot: 7
        type: physical
      - id: i8
        label: port8
        mac_address: null
        slot: 8
        type: physical
      - id: i9
        label: port9
        mac_address: null
        slot: 9
        type: physical
      - id: i10
        label: port10
        mac_address: null
        slot: 10
        type: physical
      - id: i11
        label: port11
        mac_address: null
        slot: 11
        type: physical
      - id: i12
        label: port12
        mac_address: null
        slot: 12
        type: physical
      - id: i13
        label: port13
        mac_address: null
        slot: 13
        type: physical
      - id: i14
        label: port14
        mac_address: null
        slot: 14
        type: physical
      - id: i15
        label: port15
        mac_address: null
        slot: 15
        type: physical
      - id: i16
        label: port16
        mac_address: null
        slot: 16
        type: physical
      - id: i17
        label: port17
        mac_address: null
        slot: 17
        type: physical
  - boot_disk_size: null
    configuration:
      - name: default
        content: bridge1
    cpu_limit: null
    cpus: null
    data_volume: null
    hide_links: true
    id: n2
    image_definition: null
    label: ext-conn-0
    node_definition: external_connector
    parameters: {}
    ram: null
    tags: []
    x: 280
    y: -520
    interfaces:
      - id: i0
        label: port
        mac_address: null
        slot: 0
        type: physical
  - boot_disk_size: null
    configuration:
      - name: nxos_config.txt
        content: |-
          hostname inserthostname-here
          # workaround for booting to loader> prompt
          echo 'from cli import cli' > set_boot.py
          echo 'import json' >> set_boot.py
          echo 'import os' >> set_boot.py
          echo 'import time' >> set_boot.py
          echo 'bootimage = json.loads(cli("show version | json"))["kick_file_name"]' >> set_boot.py
          echo 'set_boot = cli("conf t ; boot nxos {} ; no event manager applet BOOTCONFIG".format(bootimage))' >> set_boot.py
          echo 'i = 0' >> set_boot.py
          echo 'while i < 10:' >> set_boot.py
          echo '    try:' >> set_boot.py
          echo '        save_config = cli("copy running-config startup-config")' >> set_boot.py
          echo '        break' >> set_boot.py
          echo '    except Exception:' >> set_boot.py
          echo '        i += 1' >> set_boot.py
          echo '        time.sleep(1)' >> set_boot.py
          echo 'os.remove("/bootflash/set_boot.py")' >> set_boot.py
          event manager applet BOOTCONFIG
           event syslog pattern "Configured from vty"
           action 1.0 cli python bootflash:set_boot.py
          # minimum needed config to login
          no password strength-check
          username admin role network-admin
          username admin password cisco.123 role network-admin
          username cisco role network-admin
          username cisco password cisco role network-admin
          vrf context management
            ip route 0.0.0.0/0 10.15.34.1
          interface mgmt0
            no cdp enable
            vrf member management
            ip address 10.15.34.12/24
    cpu_limit: null
    cpus: null
    data_volume: null
    hide_links: false
    id: n3
    image_definition: nxosv9500v64-lite-10-5-2-f
    label: S2
    node_definition: nxosv9000
    parameters: {}
    ram: null
    tags: []
    x: 40
    y: -280
    interfaces:
      - id: i0
        label: Loopback0
        mac_address: null
        type: loopback
      - id: i1
        label: mgmt0
        mac_address: null
        slot: 0
        type: physical
      - id: i2
        label: Ethernet1/1
        mac_address: null
        slot: 1
        type: physical
      - id: i3
        label: Ethernet1/2
        mac_address: null
        slot: 2
        type: physical
      - id: i4
        label: Ethernet1/3
        mac_address: null
        slot: 3
        type: physical
      - id: i5
        label: Ethernet1/4
        mac_address: null
        slot: 4
        type: physical
      - id: i6
        label: Ethernet1/5
        mac_address: null
        slot: 5
        type: physical
      - id: i7
        label: Ethernet1/6
        mac_address: null
        slot: 6
        type: physical
      - id: i8
        label: Ethernet1/7
        mac_address: null
        slot: 7
        type: physical
      - id: i9
        label: Ethernet1/8
        mac_address: null
        slot: 8
        type: physical
      - id: i10
        label: Ethernet1/9
        mac_address: null
        slot: 9
        type: physical
      - id: i11
        label: Ethernet1/10
        mac_address: null
        slot: 10
        type: physical
  - boot_disk_size: null
    configuration:
      - name: nxos_config.txt
        content: |-
          hostname inserthostname-here
          # workaround for booting to loader> prompt
          echo 'from cli import cli' > set_boot.py
          echo 'import json' >> set_boot.py
          echo 'import os' >> set_boot.py
          echo 'import time' >> set_boot.py
          echo 'bootimage = json.loads(cli("show version | json"))["kick_file_name"]' >> set_boot.py
          echo 'set_boot = cli("conf t ; boot nxos {} ; no event manager applet BOOTCONFIG".format(bootimage))' >> set_boot.py
          echo 'i = 0' >> set_boot.py
          echo 'while i < 10:' >> set_boot.py
          echo '    try:' >> set_boot.py
          echo '        save_config = cli("copy running-config startup-config")' >> set_boot.py
          echo '        break' >> set_boot.py
          echo '    except Exception:' >> set_boot.py
          echo '        i += 1' >> set_boot.py
          echo '        time.sleep(1)' >> set_boot.py
          echo 'os.remove("/bootflash/set_boot.py")' >> set_boot.py
          event manager applet BOOTCONFIG
           event syslog pattern "Configured from vty"
           action 1.0 cli python bootflash:set_boot.py
          # minimum needed config to login
          no password strength-check
          username admin role network-admin
          username admin password cisco.123 role network-admin
          username cisco role network-admin
          username cisco password cisco role network-admin
          vrf context management
            ip route 0.0.0.0/0 10.15.34.1
          interface mgmt0
            no cdp enable
            vrf member management
            ip address 10.15.34.13/24
    cpu_limit: null
    cpus: null
    data_volume: null
    hide_links: false
    id: n4
    image_definition: nxosv9300v64-lite-10-5-2-f
    label: L1
    node_definition: nxosv9000
    parameters: {}
    ram: null
    tags: []
    x: -440
    y: -40
    interfaces:
      - id: i0
        label: Loopback0
        mac_address: null
        type: loopback
      - id: i1
        label: mgmt0
        mac_address: null
        slot: 0
        type: physical
      - id: i2
        label: Ethernet1/1
        mac_address: null
        slot: 1
        type: physical
      - id: i3
        label: Ethernet1/2
        mac_address: null
        slot: 2
        type: physical
      - id: i4
        label: Ethernet1/3
        mac_address: null
        slot: 3
        type: physical
      - id: i5
        label: Ethernet1/4
        mac_address: null
        slot: 4
        type: physical
      - id: i6
        label: Ethernet1/5
        mac_address: null
        slot: 5
        type: physical
  - boot_disk_size: null
    configuration:
      - name: nxos_config.txt
        content: |-
          hostname inserthostname-here
          # workaround for booting to loader> prompt
          echo 'from cli import cli' > set_boot.py
          echo 'import json' >> set_boot.py
          echo 'import os' >> set_boot.py
          echo 'import time' >> set_boot.py
          echo 'bootimage = json.loads(cli("show version | json"))["kick_file_name"]' >> set_boot.py
          echo 'set_boot = cli("conf t ; boot nxos {} ; no event manager applet BOOTCONFIG".format(bootimage))' >> set_boot.py
          echo 'i = 0' >> set_boot.py
          echo 'while i < 10:' >> set_boot.py
          echo '    try:' >> set_boot.py
          echo '        save_config = cli("copy running-config startup-config")' >> set_boot.py
          echo '        break' >> set_boot.py
          echo '    except Exception:' >> set_boot.py
          echo '        i += 1' >> set_boot.py
          echo '        time.sleep(1)' >> set_boot.py
          echo 'os.remove("/bootflash/set_boot.py")' >> set_boot.py
          event manager applet BOOTCONFIG
           event syslog pattern "Configured from vty"
           action 1.0 cli python bootflash:set_boot.py
          # minimum needed config to login
          no password strength-check
          username admin role network-admin
          username admin password cisco.123 role network-admin
          username cisco role network-admin
          username cisco password cisco role network-admin
          vrf context management
            ip route 0.0.0.0/0 10.15.34.1
          interface mgmt0
            no cdp enable
            vrf member management
            ip address 10.15.34.14/24
    cpu_limit: null
    cpus: null
    data_volume: null
    hide_links: false
    id: n5
    image_definition: nxosv9300v64-lite-10-5-2-f
    label: L2
    node_definition: nxosv9000
    parameters: {}
    ram: null
    tags: []
    x: -280
    y: -40
    interfaces:
      - id: i0
        label: Loopback0
        mac_address: null
        type: loopback
      - id: i1
        label: mgmt0
        mac_address: null
        slot: 0
        type: physical
      - id: i2
        label: Ethernet1/1
        mac_address: null
        slot: 1
        type: physical
      - id: i3
        label: Ethernet1/2
        mac_address: null
        slot: 2
        type: physical
      - id: i4
        label: Ethernet1/3
        mac_address: null
        slot: 3
        type: physical
      - id: i5
        label: Ethernet1/4
        mac_address: null
        slot: 4
        type: physical
  - boot_disk_size: null
    configuration:
      - name: nxos_config.txt
        content: |-
          hostname inserthostname-here
          # workaround for booting to loader> prompt
          echo 'from cli import cli' > set_boot.py
          echo 'import json' >> set_boot.py
          echo 'import os' >> set_boot.py
          echo 'import time' >> set_boot.py
          echo 'bootimage = json.loads(cli("show version | json"))["kick_file_name"]' >> set_boot.py
          echo 'set_boot = cli("conf t ; boot nxos {} ; no event manager applet BOOTCONFIG".format(bootimage))' >> set_boot.py
          echo 'i = 0' >> set_boot.py
          echo 'while i < 10:' >> set_boot.py
          echo '    try:' >> set_boot.py
          echo '        save_config = cli("copy running-config startup-config")' >> set_boot.py
          echo '        break' >> set_boot.py
          echo '    except Exception:' >> set_boot.py
          echo '        i += 1' >> set_boot.py
          echo '        time.sleep(1)' >> set_boot.py
          echo 'os.remove("/bootflash/set_boot.py")' >> set_boot.py
          event manager applet BOOTCONFIG
           event syslog pattern "Configured from vty"
           action 1.0 cli python bootflash:set_boot.py
          # minimum needed config to login
          no password strength-check
          username admin role network-admin
          username admin password cisco.123 role network-admin
          username cisco role network-admin
          username cisco password cisco role network-admin
          vrf context management
            ip route 0.0.0.0/0 10.15.34.1
          interface mgmt0
            no cdp enable
            vrf member management
            ip address 10.15.34.15/24
    cpu_limit: null
    cpus: null
    data_volume: null
    hide_links: false
    id: n6
    image_definition: nxosv9300v64-lite-10-5-2-f
    label: L3
    node_definition: nxosv9000
    parameters: {}
    ram: null
    tags: []
    x: -120
    y: -40
    interfaces:
      - id: i0
        label: Loopback0
        mac_address: null
        type: loopback
      - id: i1
        label: mgmt0
        mac_address: null
        slot: 0
        type: physical
      - id: i2
        label: Ethernet1/1
        mac_address: null
        slot: 1
        type: physical
      - id: i3
        label: Ethernet1/2
        mac_address: null
        slot: 2
        type: physical
      - id: i4
        label: Ethernet1/3
        mac_address: null
        slot: 3
        type: physical
      - id: i5
        label: Ethernet1/4
        mac_address: null
        slot: 4
        type: physical
      - id: i6
        label: Ethernet1/5
        mac_address: null
        slot: 5
        type: physical
  - boot_disk_size: null
    configuration:
      - name: nxos_config.txt
        content: |-
          hostname inserthostname-here
          # workaround for booting to loader> prompt
          echo 'from cli import cli' > set_boot.py
          echo 'import json' >> set_boot.py
          echo 'import os' >> set_boot.py
          echo 'import time' >> set_boot.py
          echo 'bootimage = json.loads(cli("show version | json"))["kick_file_name"]' >> set_boot.py
          echo 'set_boot = cli("conf t ; boot nxos {} ; no event manager applet BOOTCONFIG".format(bootimage))' >> set_boot.py
          echo 'i = 0' >> set_boot.py
          echo 'while i < 10:' >> set_boot.py
          echo '    try:' >> set_boot.py
          echo '        save_config = cli("copy running-config startup-config")' >> set_boot.py
          echo '        break' >> set_boot.py
          echo '    except Exception:' >> set_boot.py
          echo '        i += 1' >> set_boot.py
          echo '        time.sleep(1)' >> set_boot.py
          echo 'os.remove("/bootflash/set_boot.py")' >> set_boot.py
          event manager applet BOOTCONFIG
           event syslog pattern "Configured from vty"
           action 1.0 cli python bootflash:set_boot.py
          # minimum needed config to login
          no password strength-check
          username admin role network-admin
          username admin password cisco.123 role network-admin
          username cisco role network-admin
          username cisco password cisco role network-admin
          vrf context management
            ip route 0.0.0.0/0 10.15.34.1
          interface mgmt0
            no cdp enable
            vrf member management
            ip address 10.15.34.16/24
    cpu_limit: null
    cpus: null
    data_volume: null
    hide_links: false
    id: n7
    image_definition: nxosv9300v64-lite-10-5-2-f
    label: L4
    node_definition: nxosv9000
    parameters: {}
    ram: null
    tags: []
    x: 40
    y: -40
    interfaces:
      - id: i0
        label: Loopback0
        mac_address: null
        type: loopback
      - id: i1
        label: mgmt0
        mac_address: null
        slot: 0
        type: physical
      - id: i2
        label: Ethernet1/1
        mac_address: null
        slot: 1
        type: physical
      - id: i3
        label: Ethernet1/2
        mac_address: null
        slot: 2
        type: physical
      - id: i4
        label: Ethernet1/3
        mac_address: null
        slot: 3
        type: physical
      - id: i5
        label: Ethernet1/4
        mac_address: null
        slot: 4
        type: physical
      - id: i6
        label: Ethernet1/5
        mac_address: null
        slot: 5
        type: physical
  - boot_disk_size: null
    configuration:
      - name: nxos_config.txt
        content: |-
          hostname inserthostname-here
          # workaround for booting to loader> prompt
          echo 'from cli import cli' > set_boot.py
          echo 'import json' >> set_boot.py
          echo 'import os' >> set_boot.py
          echo 'import time' >> set_boot.py
          echo 'bootimage = json.loads(cli("show version | json"))["kick_file_name"]' >> set_boot.py
          echo 'set_boot = cli("conf t ; boot nxos {} ; no event manager applet BOOTCONFIG".format(bootimage))' >> set_boot.py
          echo 'i = 0' >> set_boot.py
          echo 'while i < 10:' >> set_boot.py
          echo '    try:' >> set_boot.py
          echo '        save_config = cli("copy running-config startup-config")' >> set_boot.py
          echo '        break' >> set_boot.py
          echo '    except Exception:' >> set_boot.py
          echo '        i += 1' >> set_boot.py
          echo '        time.sleep(1)' >> set_boot.py
          echo 'os.remove("/bootflash/set_boot.py")' >> set_boot.py
          event manager applet BOOTCONFIG
           event syslog pattern "Configured from vty"
           action 1.0 cli python bootflash:set_boot.py
          # minimum needed config to login
          no password strength-check
          username admin role network-admin
          username admin password cisco.123 role network-admin
          username cisco role network-admin
          username cisco password cisco role network-admin
          vrf context management
            ip route 0.0.0.0/0 10.15.34.1
          interface mgmt0
            no cdp enable
            vrf member management
            ip address 10.15.34.17/24
    cpu_limit: null
    cpus: null
    data_volume: null
    hide_links: false
    id: n8
    image_definition: nxosv9300v64-lite-10-5-2-f
    label: BL1
    node_definition: nxosv9000
    parameters: {}
    ram: null
    tags: []
    x: 200
    y: -40
    interfaces:
      - id: i0
        label: Loopback0
        mac_address: null
        type: loopback
      - id: i1
        label: mgmt0
        mac_address: null
        slot: 0
        type: physical
      - id: i2
        label: Ethernet1/1
        mac_address: null
        slot: 1
        type: physical
      - id: i3
        label: Ethernet1/2
        mac_address: null
        slot: 2
        type: physical
      - id: i4
        label: Ethernet1/3
        mac_address: null
        slot: 3
        type: physical
      - id: i5
        label: Ethernet1/4
        mac_address: null
        slot: 4
        type: physical
  - boot_disk_size: null
    configuration:
      - name: nxos_config.txt
        content: |-
          hostname inserthostname-here
          # workaround for booting to loader> prompt
          echo 'from cli import cli' > set_boot.py
          echo 'import json' >> set_boot.py
          echo 'import os' >> set_boot.py
          echo 'import time' >> set_boot.py
          echo 'bootimage = json.loads(cli("show version | json"))["kick_file_name"]' >> set_boot.py
          echo 'set_boot = cli("conf t ; boot nxos {} ; no event manager applet BOOTCONFIG".format(bootimage))' >> set_boot.py
          echo 'i = 0' >> set_boot.py
          echo 'while i < 10:' >> set_boot.py
          echo '    try:' >> set_boot.py
          echo '        save_config = cli("copy running-config startup-config")' >> set_boot.py
          echo '        break' >> set_boot.py
          echo '    except Exception:' >> set_boot.py
          echo '        i += 1' >> set_boot.py
          echo '        time.sleep(1)' >> set_boot.py
          echo 'os.remove("/bootflash/set_boot.py")' >> set_boot.py
          event manager applet BOOTCONFIG
           event syslog pattern "Configured from vty"
           action 1.0 cli python bootflash:set_boot.py
          # minimum needed config to login
          no password strength-check
          username admin role network-admin
          username admin password cisco.123 role network-admin
          username cisco role network-admin
          username cisco password cisco role network-admin
          vrf context management
            ip route 0.0.0.0/0 10.15.34.1
          interface mgmt0
            no cdp enable
            vrf member management
            ip address 10.15.34.18/24
    cpu_limit: null
    cpus: null
    data_volume: null
    hide_links: false
    id: n9
    image_definition: nxosv9300v64-lite-10-5-2-f
    label: BL2
    node_definition: nxosv9000
    parameters: {}
    ram: null
    tags: []
    x: 360
    y: -40
    interfaces:
      - id: i0
        label: Loopback0
        mac_address: null
        type: loopback
      - id: i1
        label: mgmt0
        mac_address: null
        slot: 0
        type: physical
      - id: i2
        label: Ethernet1/1
        mac_address: null
        slot: 1
        type: physical
      - id: i3
        label: Ethernet1/2
        mac_address: null
        slot: 2
        type: physical
      - id: i4
        label: Ethernet1/3
        mac_address: null
        slot: 3
        type: physical
      - id: i5
        label: Ethernet1/4
        mac_address: null
        slot: 4
        type: physical
  - boot_disk_size: null
    configuration:
      - name: nxos_config.txt
        content: |-
          hostname inserthostname-here
          # workaround for booting to loader> prompt
          echo 'from cli import cli' > set_boot.py
          echo 'import json' >> set_boot.py
          echo 'import os' >> set_boot.py
          echo 'import time' >> set_boot.py
          echo 'bootimage = json.loads(cli("show version | json"))["kick_file_name"]' >> set_boot.py
          echo 'set_boot = cli("conf t ; boot nxos {} ; no event manager applet BOOTCONFIG".format(bootimage))' >> set_boot.py
          echo 'i = 0' >> set_boot.py
          echo 'while i < 10:' >> set_boot.py
          echo '    try:' >> set_boot.py
          echo '        save_config = cli("copy running-config startup-config")' >> set_boot.py
          echo '        break' >> set_boot.py
          echo '    except Exception:' >> set_boot.py
          echo '        i += 1' >> set_boot.py
          echo '        time.sleep(1)' >> set_boot.py
          echo 'os.remove("/bootflash/set_boot.py")' >> set_boot.py
          event manager applet BOOTCONFIG
           event syslog pattern "Configured from vty"
           action 1.0 cli python bootflash:set_boot.py
          # minimum needed config to login
          no password strength-check
          username admin role network-admin
          username admin password cisco.123 role network-admin
          username cisco role network-admin
          username cisco password cisco role network-admin
          vrf context management
            ip route 0.0.0.0/0 10.15.34.1
          interface mgmt0
            no cdp enable
            vrf member management
            ip address 10.15.34.21/24
    cpu_limit: null
    cpus: null
    data_volume: null
    hide_links: false
    id: n10
    image_definition: nxosv9300v64-lite-10-5-2-f
    label: ExtRtr
    node_definition: nxosv9000
    parameters: {}
    ram: null
    tags: []
    x: 280
    y: 80
    interfaces:
      - id: i0
        label: Loopback0
        mac_address: null
        type: loopback
      - id: i1
        label: mgmt0
        mac_address: null
        slot: 0
        type: physical
      - id: i2
        label: Ethernet1/1
        mac_address: null
        slot: 1
        type: physical
      - id: i3
        label: Ethernet1/2
        mac_address: null
        slot: 2
        type: physical
      - id: i4
        label: Ethernet1/3
        mac_address: null
        slot: 3
        type: physical
links:
  - id: l0
    n1: n2
    n2: n1
    i1: i0
    i2: i0
    conditioning: {}
    label: ext-conn-0-port<->unmanaged-switch-0-port0
  - id: l1
    n1: n1
    n2: n0
    i1: i1
    i2: i1
    conditioning: {}
    label: unmanaged-switch-0-port1<->S1-mgmt0
  - id: l2
    n1: n1
    n2: n3
    i1: i2
    i2: i1
    conditioning: {}
    label: unmanaged-switch-0-port2<->S2-mgmt0
  - id: l3
    n1: n1
    n2: n4
    i1: i3
    i2: i1
    conditioning: {}
    label: unmanaged-switch-0-port3<->L1-mgmt0
  - id: l4
    n1: n1
    n2: n5
    i1: i4
    i2: i1
    conditioning: {}
    label: unmanaged-switch-0-port4<->L2-mgmt0
  - id: l5
    n1: n1
    n2: n6
    i1: i5
    i2: i1
    conditioning: {}
    label: unmanaged-switch-0-port5<->L3-mgmt0
  - id: l6
    n1: n1
    n2: n7
    i1: i6
    i2: i1
    conditioning: {}
    label: unmanaged-switch-0-port6<->L4-mgmt0
  - id: l7
    n1: n0
    n2: n4
    i1: i2
    i2: i2
    conditioning: {}
    label: S1-Ethernet1/1<->L1-Ethernet1/1
  - id: l8
    n1: n0
    n2: n5
    i1: i3
    i2: i2
    conditioning: {}
    label: S1-Ethernet1/2<->L2-Ethernet1/1
  - id: l9
    n1: n0
    n2: n6
    i1: i4
    i2: i2
    conditioning: {}
    label: S1-Ethernet1/3<->L3-Ethernet1/1
  - id: l10
    n1: n0
    n2: n7
    i1: i5
    i2: i2
    conditioning: {}
    label: S1-Ethernet1/4<->L4-Ethernet1/1
  - id: l11
    n1: n3
    n2: n4
    i1: i2
    i2: i3
    conditioning: {}
    label: S2-Ethernet1/1<->L1-Ethernet1/2
  - id: l12
    n1: n3
    n2: n5
    i1: i3
    i2: i3
    conditioning: {}
    label: S2-Ethernet1/2<->L2-Ethernet1/2
  - id: l13
    n1: n3
    n2: n6
    i1: i4
    i2: i3
    conditioning: {}
    label: S2-Ethernet1/3<->L3-Ethernet1/2
  - id: l14
    n1: n3
    n2: n7
    i1: i5
    i2: i3
    conditioning: {}
    label: S2-Ethernet1/4<->L4-Ethernet1/2
  - id: l15
    n1: n8
    n2: n1
    i1: i1
    i2: i7
    conditioning: {}
    label: BL1-mgmt0<->unmanaged-switch-0-port7
  - id: l16
    n1: n9
    n2: n1
    i1: i1
    i2: i8
    conditioning: {}
    label: BL2-mgmt0<->unmanaged-switch-0-port8
  - id: l17
    n1: n10
    n2: n1
    i1: i1
    i2: i9
    conditioning: {}
    label: ExtRtr-mgmt0<->unmanaged-switch-0-port9
  - id: l18
    n1: n8
    n2: n0
    i1: i2
    i2: i6
    conditioning: {}
    label: BL1-Ethernet1/1<->S1-Ethernet1/5
  - id: l19
    n1: n8
    n2: n3
    i1: i3
    i2: i6
    conditioning: {}
    label: BL1-Ethernet1/2<->S2-Ethernet1/5
  - id: l20
    n1: n9
    n2: n0
    i1: i2
    i2: i7
    conditioning: {}
    label: BL2-Ethernet1/1<->S1-Ethernet1/6
  - id: l21
    n1: n9
    n2: n3
    i1: i3
    i2: i7
    conditioning: {}
    label: BL2-Ethernet1/2<->S2-Ethernet1/6
  - id: l22
    n1: n8
    n2: n10
    i1: i5
    i2: i2
    conditioning: {}
    label: BL1-Ethernet1/4<->ExtRtr-Ethernet1/1
  - id: l23
    n1: n9
    n2: n10
    i1: i5
    i2: i3
    conditioning: {}
    label: BL2-Ethernet1/4<->ExtRtr-Ethernet1/2
  - id: l24
    n1: n6
    n2: n7
    i1: i5
    i2: i5
    conditioning: {}
    label: L3-Ethernet1/4<->L4-Ethernet1/4
  - id: l25
    n1: n6
    n2: n7
    i1: i6
    i2: i6
    conditioning: {}
    label: L3-Ethernet1/5<->L4-Ethernet1/5
lab:
  description: ''
  notes: ''
  title: TECDCN-2419
  version: 0.3.0
